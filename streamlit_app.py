# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/120voOP09YXIuA5SoeAiUW-9ndqZ8yxX4
"""

import streamlit as st
import joblib
import pandas as pd
from your_job_classifier_module import scrape_karkidi_jobs, preprocess_skills, cluster_skills, classify_new_jobs, notify_user

# Load models here or trigger training on first run
@st.cache_resource
def load_models():
    model = joblib.load('job_cluster_model.pkl')
    vectorizer = joblib.load('tfidf_vectorizer.pkl')
    return model, vectorizer

model, vectorizer = load_models()

st.title("Job Classifier")

keyword = st.text_input("Enter job keyword", "data science")
preferred_clusters = st.multiselect("Choose clusters to get alerts for", options=[0,1,2,3,4], default=[0,1])

if st.button("Get Jobs"):
    jobs_df = scrape_karkidi_jobs(keyword, pages=1)
    if jobs_df.empty:
        st.warning("No jobs found.")
    else:
        classified = classify_new_jobs(jobs_df, model, vectorizer)
        matched = notify_user(classified, preferred_clusters)

        if not matched.empty:
            st.success(f"Found {len(matched)} matched jobs:")
            st.dataframe(matched[["Title", "Company", "Location", "Skills"]])
        else:
            st.info("No matched jobs in selected clusters.")